name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      tf_actions_working_dir: ./terraform-cloud-resume
      AWS_DEFAULT_REGION: ca-central-1

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_actions_working_dir }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.11.2

      - name: Setup python virtual env and run test
        run: |
          python3 -m venv venv
          source ./venv/bin/activate
          pip3 install --upgrade pip
          python3 -m pip install --upgrade setuptools
          pip3 install -r requirements.txt
          pytest ./modules/lambda/test_upsert_visitor_count.py

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::521555160642:role/github-actions-role
          role-session-name: github-cloud-resume-master-role-session
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4

      - name: Terraform Init
        id: init
        run: terraform init -reconfigure -backend-config="./env/prod.s3.tfbackend"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file="./env/prod.tfvars"

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -var-file="./env/prod.tfvars" -auto-approve